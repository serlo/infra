image:
  tag: ${image_tag}
  repository: oryd/kratos
ingress:
  public:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: ${host}
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - ${host}
        secretName: ${tls_secret_name}

kratos:
  autoMigrate: true

  config:
    dsn: ${dsn}

    serve:
      public:
        base_url: https://${host}
        request_log:
          disable_for_health: true
      admin:
        request_log:
          disable_for_health: true

    selfservice:
      default_browser_return_url: https://${domain}/
      allowed_return_urls:
        # TODO: try with wildcard later
        - https://fr.${domain}/
        - https://hi.${domain}/
        - https://de.${domain}/
        - https://ta.${domain}/
        - https://en.${domain}/
        - https://es.${domain}/
      methods:
        password:
          enabled: true
          config:
            haveibeenpwned_enabled: false
        link:
          enabled: true
          config:
            base_url: https://${domain}/api/.ory/
        oidc:
          enabled: true
          config:
            base_redirect_uri: https://${domain}/api/.ory/
            providers:
              - id: nbp
                provider: generic
                client_id: ${nbp_client_id}
                client_secret: ${nbp_client_secret}
                issuer_url: https://aai.demo.meinbildungsraum.de/realms/nbp-aai
                mapper_url: base64://${nbp_user_mapper}
              - id: vidis
                provider: generic
                client_id: ${vidis_client_id}
                client_secret: ${vidis_client_secret}
                issuer_url: ${vidis_issuer_url}
                mapper_url: base64://${vidis_user_mapper}

      flows:
        error:
          ui_url: https://${domain}/auth/error

        settings:
          ui_url: https://${domain}/auth/settings
          privileged_session_max_age: 15m

        recovery:
          enabled: true
          use: link
          ui_url: https://${domain}/auth/recovery

        verification:
          enabled: true
          use: link
          ui_url: https://${domain}/auth/verification

        logout:
          after:
            default_browser_return_url: https://${domain}/auth/login

        login:
          ui_url: https://${domain}/auth/login
          lifespan: 10m
          after:
            password:
              hooks:
                - hook: require_verified_address
                - hook: web_hook
                  config:
                    url: https://api.${domain}/kratos/updateLastLogin
                    method: POST
                    body: base64://${user_id_mapper}
                    response:
                      ignore: true
            oidc:
              default_browser_return_url: https://${domain}/auth/login

        registration:
          lifespan: 10m
          ui_url: https://${domain}/auth/registration
          after:
            hooks:
              - hook: web_hook
                config:
                  url: https://api.${domain}/kratos/register
                  method: POST
                  body: base64://${user_id_mapper}
                  auth:
                    type: api_key
                    config:
                      name: x-kratos-key
                      value: ${kratos_secret}
                      in: header
              - hook: web_hook
                config:
                  url: https://${mailchimp_server}.api.mailchimp.com/3.0/lists/a7bb2bbc4f/members
                  method: POST
                  body: base64://${subscribe_newsletter_mapper}
                  can_interrupt: false
                  response:
                    ignore: true
                  auth:
                    type: basic_auth
                    config:
                      user: serlo
                      password: ${newsletter_api_key}
            oidc:
              default_browser_return_url: https://${domain}/auth/login
              hooks:
                - hook: web_hook
                  config:
                    url: https://api.${domain}/kratos/register
                    method: POST
                    body: base64://${user_id_mapper}
                    auth:
                      type: api_key
                      config:
                        name: x-kratos-key
                        value: ${kratos_secret}
                        in: header
                - hook: session
                - hook: web_hook
                  config:
                    url: https://${mailchimp_server}.api.mailchimp.com/3.0/lists/a7bb2bbc4f/members
                    method: POST
                    body: base64://${subscribe_newsletter_mapper}
                    can_interrupt: false
                    response:
                      ignore: true
                    auth:
                      type: basic_auth
                      config:
                        user: serlo
                        password: ${newsletter_api_key}

    session:
      lifespan: 720h

    secrets:
      cookie:
        - ${cookie_secret}

    identity:
      default_schema_id: default
      schemas:
        - id: default
          url: base64://${identity_schema}

    courier:
      smtp:
        connection_uri: smtp://SMTP_Injection:${smtp_password}@smtp.eu.sparkpostmail.com:2525
        from_name: Serlo
        from_address: no-reply@mail.serlo.org
      # TODO: just for testing purpose, remove hard code
      template_override_path: https://${domain}/api/.ory/mail-templates
      templates:
        verification:
          valid:
            email:
              subject: http://${domain}/api/.ory/mail-templates/verification/valid/email.subject.gotmpl
              body:
                html: http://${domain}/api/.ory/mail-templates/verification/valid/email.body.gotmpl
                plaintext: http://${domain}/api/.ory/mail-templates/verification/valid/email.body.plaintext.gotmpl
          invalid:
            email:
              subject: http://${domain}/api/.ory/mail-templates/verification/invalid/email.subject.gotmpl
              body:
                html: http://${domain}/api/.ory/mail-templates/verification/invalid/email.body.gotmpl
                plaintext: http://${domain}/api/.ory/mail-templates/verification/invalid/email.body.plaintext.gotmpl
        recovery:
          valid:
            email:
              subject: http://${domain}/api/.ory/mail-templates/recovery/valid/email.subject.gotmpl
              body:
                html: http://${domain}/api/.ory/mail-templates/recovery/valid/email.body.gotmpl
                plaintext: http://${domain}/api/.ory/mail-templates/recovery/valid/email.body.plaintext.gotmpl
          invalid:
            email:
              subject: http://${domain}/api/.ory/mail-templates/recovery/invalid/email.subject.gotmpl
              body:
                html: http://${domain}/api/.ory/mail-templates/recovery/invalid/email.body.gotmpl
                plaintext: http://${domain}/api/.ory/mail-templates/recovery/invalid/email.body.plaintext.gotmpl
deployment:
  resources:
    requests:
      cpu: 50m
      memory: 70Mi
    limits:
      cpu: 70m
      memory: 100Mi
